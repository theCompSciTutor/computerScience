GRAPH = {
    "A":["B","D","E"],
    "B":["A","C","D"],
    "C":["B","G"],
    "D":["A","B","E","F"],
    "E":["A","D"],
    "F":["D"],
    "G":["C"]
}
visitedList = []  // an empty list of visited nodes

FUNCTION dfs(graph, currentVertex, visited)
    append currentVertex to list of visited nodes
    FOR vertex in graph[currentVertex]  // check neighbours
        IF vertex not in visited THEN
            dfs(graph, vertex, visited) // recursive call
            // stack will store return address, parameters 
            // and local variables
        ENDIF
    NEXT vertex
    RETURN visited
ENDFUNCTION

// main program
traversal = dfs(GRAPH, "A", visitedList)
print("Nodes visited in this order: ", traversal)